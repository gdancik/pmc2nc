% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/insertEdgeList.R
\name{insertEdgeList}
\alias{insertEdgeList}
\title{Insert edge lists to mysql database.}
\usage{
insertEdgeList(conMysql, edgeList, tableName = "EdgeList",
  dateTableName = "EdgeList_date")
}
\arguments{
\item{conMysql}{a MySQL connection}

\item{edgeList}{an edge list, as obtained from `generateEdgeList`}

\item{tableName}{string with the name of the table used to store the edge list, defaulting to 'EdgeList'}

\item{dateTableName}{string with the name of the table used to store the dates for pmids, defaulting to 'EdgeList_date'}
}
\value{
a scalar numeric that specifies the number of rows
        affected by the statement. An error is raised when issuing a statement over a closed
        or invalid connection, if the syntax of the statement is invalid.
}
\description{
`insertEdgeList` insert the edge list from the results of `generateEdgeList`
}
\details{
`edgeList` must come from the result of generateEdgeList. The edge list will be stored in the
specified table, which must include column names 'Source' and 'Target'. The table will be
created if it does not exist. Edges in the table with matching targets are  first 
deleted. The assumption is that the 'edgeList' is a complete up-to-date edge list, and
previous records are removed.
}
\examples{
\dontrun{
# generate an edge list for a single article and then insert the data to the table called "edgelist"
res1 <- get_pmc_cited_in(21876761)
e2 <- generateEdgeList(res1)
insertEdgeList(conMysql, e2)
}
}
\seealso{
\code{\link{generateEdgeList}} for obtaining edgeList citation results
}
